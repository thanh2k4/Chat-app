// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one

INSERT INTO auth (id ,username, password)
VALUES ($1, $2, $3)
RETURNING id, username, password
`

type CreateUserParams struct {
	ID       pgtype.UUID `json:"id"`
	Username string      `json:"username"`
	Password string      `json:"password"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Auth, error) {
	row := q.db.QueryRow(ctx, createUser, arg.ID, arg.Username, arg.Password)
	var i Auth
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}

const getUserByUsername = `-- name: GetUserByUsername :one

SELECT id, username, password FROM auth WHERE username = $1 LIMIT 1
`

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (Auth, error) {
	row := q.db.QueryRow(ctx, getUserByUsername, username)
	var i Auth
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}
